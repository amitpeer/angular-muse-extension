*** attempt to navigate by closing 2 eyes for some time ***
** failure ***

  eyesClose: Observable<EEGReading>;
  eyesOpen: Observable<EEGReading>;

    eyesCloseTime = 0;
    eyesOpenTime = 0;

//noinspection TypeScriptValidateTypes
    this.eyesClose = this.muse.eegReadings
      .filter(r => r.electrode === leftEarChannel)
      .filter(r => Math.max(...r.samples) > 240 && Math.max(...r.samples) < 275);

    //noinspection TypeScriptValidateTypes
    this.eyesOpen = this.muse.eegReadings
      .filter(r => r.electrode === leftEarChannel)
      .filter(r => Math.min(...r.samples) < -150 && Math.min(...r.samples) > -300);


    this.eyesClose.subscribe(r => {
      // console.log('Eyes Closed! value: ', Math.max(...r.samples) + " timestamp: " + r.timestamp);
      this.eyesCloseTime = r.timestamp;
    });

    this.eyesOpen.subscribe(r => {
      // console.log('Eyes Open! value: ', Math.min(...r.samples) + " timestamp: " + r.timestamp);
      this.eyesOpenTime = r.timestamp;

      const timeEyesAreClosed = this.eyesOpenTime - this.eyesCloseTime;
      // console.log("Time eyes were closed: ", timeEyesAreClosed / 1000 + " seconds");
      if (timeEyesAreClosed > 1000 && timeEyesAreClosed < 3000) {
        // console.log("CLICK");
      }
    });


***Navigate with keyboard***


export enum KEY_CODE {
  RIGHT_ARROW = 39,
  LEFT_ARROW = 37,
  UP_ARROW = 38,
  DOWN_ARROW = 40,
  ENTER = 13
}

    // @HostListener('window:keyup', ['$event'])
    // keyEvent(event: KeyboardEvent) {
    //   console.log(event);
    //
    //   if (event.keyCode === KEY_CODE.RIGHT_ARROW) {
    //     if (this.selectorIndex.col < this.matrixState()[0].length - 1) {
    //       this.selectorIndex.col++;
    //     }
    //   }
    //
    //   if (event.keyCode === KEY_CODE.LEFT_ARROW) {
    //     if (this.selectorIndex.col > 0) {
    //       this.selectorIndex.col--;
    //     }
    //   }
    //
    //   if (event.keyCode === KEY_CODE.DOWN_ARROW) {
    //     if (this.selectorIndex.row < this.matrixState().length - 1) {
    //       this.selectorIndex.row++;
    //     }
    //   }
    //   if (event.keyCode === KEY_CODE.UP_ARROW) {
    //     if (this.selectorIndex.row > 0) {
    //       this.selectorIndex.row--;
    //     }
    //   }
    //
    //   if (event.keyCode === KEY_CODE.ENTER) {
    //     // this.click();
    //   }
    // }





***Navigate with keyboard***


export enum KEY_CODE {
  RIGHT_ARROW = 39,
  LEFT_ARROW = 37,
  UP_ARROW = 38,
  DOWN_ARROW = 40,
  ENTER = 13
}

    // @HostListener('window:keyup', ['$event'])
    // keyEvent(event: KeyboardEvent) {
    //   console.log(event);
    //
    //   if (event.keyCode === KEY_CODE.RIGHT_ARROW) {
    //     if (this.selectorIndex.col < this.matrixState()[0].length - 1) {
    //       this.selectorIndex.col++;
    //     }
    //   }
    //
    //   if (event.keyCode === KEY_CODE.LEFT_ARROW) {
    //     if (this.selectorIndex.col > 0) {
    //       this.selectorIndex.col--;
    //     }
    //   }
    //
    //   if (event.keyCode === KEY_CODE.DOWN_ARROW) {
    //     if (this.selectorIndex.row < this.matrixState().length - 1) {
    //       this.selectorIndex.row++;
    //     }
    //   }
    //   if (event.keyCode === KEY_CODE.UP_ARROW) {
    //     if (this.selectorIndex.row > 0) {
    //       this.selectorIndex.row--;
    //     }
    //   }
    //
    //   if (event.keyCode === KEY_CODE.ENTER) {
    //     // this.click();
    //   }
    // }



